version: '3.5'
services:
  nginx:
    image: nginx:1.10.1
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./:/var/www/html:rw
      - ./docker/logs/nginx:/var/log/nginx:rw
      - ./docker/nginx/ssl:/var/ssl
    links:
      - php

  php:
    build: ./docker/php
    volumes:
      - ./:/var/www/html:rw
      - composer-cache:/root/.composer
    links:
      - db
    extra_hosts:
      - "svezem.test:172.17.0.1"
      - "omsk.svezem.test:172.17.0.1"
      - "krasnoyarsk.svezem.test:172.17.0.1"

  db:
    image: mysql:5.7.12
    restart: on-failure
    command: --character-set-server=utf8 --collation-server=utf8_general_ci --sql-mode=""
    volumes:
      #- ./docker/db/svezem.sql:/docker-entrypoint-initdb.d/svezem.sql
      - ./docker/db/:/docker-entrypoint-initdb.d/
      - ./docker/MySQL:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 654321
      MYSQL_DATABASE: svezem
      MYSQL_USER: svezem
      MYSQL_PASSWORD: 123456
    ports:
      - $DB_PORT:3306

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - $PHPMYADMIN_PORT:80
    depends_on:
      - db
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=654321

  redis:
    image: redis:4.0.10
    volumes:
      - redis-data:/data

  redis-neural:
    image: redis:4.0.10
    command: redis-server --loadmodule /var/modules/neuralredis.so
    volumes:
      - ./docker/redis/modules:/var/modules
      - redis-neural-data:/data

  redis-admin:
    image: "erikdubbelboer/phpredisadmin"
    ports:
      - $REDISADMIN_PORT:80
    links:
      - redis
      - redis-neural
    volumes:
      - ./docker/phpredisadmin/includes:/src/app/includes

  sphinx:
    build: ./docker/sphinx
    links:
      - db
    ports:
      - "9312"
    volumes:
      - ./docker/sphinx:/etc/sphinx
      - ./docker/sphinx:/etc/sphinxsearch/
      - ./docker/logs/sphinx:/var/log/sphinxsearch

  gearman:
    image: kendu/gearman

  gearmanui:
    image: koryonik/gearman-ui
    ports:
      - $GEARMANADMIN_PORT:80
    links:
      - gearman

  php-gearman-daemon:
    build: ./docker/php
    command: bash -c "php yii gearman/start && php-fpm"
    volumes:
      - ./:/var/www/html:rw
    links:
      - db
    extra_hosts:
      - "svezem.test:172.17.0.1"
      - "omsk.svezem.test:172.17.0.1"
      - "krasnoyarsk.svezem.test:172.17.0.1"

  node:
    build: ./docker/node
    links:
      - redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - $RABBITMQ_PORT:15672
    volumes:
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      default:

  elasticsearch:
    build:
      context: docker/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      default:

  logstash:
    build:
      context: docker/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./docker/logstash/data/GeoLite2-City.mmdb:/usr/share/logstash/GeoLite2-City.mmdb
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      default:

  kibana:
    build:
      context: docker/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - $KIBANA_PORT:5601
    volumes:
      - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
    networks:
      default:

volumes:
  composer-cache: {}
  redis-data: {}
  redis-neural-data: {}
